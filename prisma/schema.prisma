// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  favouriteIds   String[] // ["home-1", "home-2", "home-3"]

  // Relations
  accounts     Account[]
  listings     Listing[]
  reservations Reservation[]
}

model Listing {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String?
  imagesSrc     String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  category      String
  roomCount     Int
  childCount    Int
  guestCount    Int
  locationValue String
  price         Int
  User          User?         @relation(fields: [userId], references: [id])
  userId        String?       @db.ObjectId
  reservations  Reservation[]
}

model Reservation {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  User       User?    @relation(fields: [userId], references: [id])
  userId     String?  @db.ObjectId
  Listing    Listing? @relation(fields: [listingId], references: [id])
  listingId  String?  @db.ObjectId
  startDate  DateTime
  endDate    DateTime
  totalPrice Float
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  providerType      String
  type              String
  provider          String
  providerId        String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  token_type        String?
  scope             String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}
